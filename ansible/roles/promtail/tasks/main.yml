---
- name: check if installing a different version of promtail
  tags:
    - promtail
  shell: "cat {{ promtail_config }}/.sha256"
  ignore_errors: true
  register: checksum

- name: determine if promtail should be installed
  tags:
    - promtail
  set_fact:
    promtail_install: (checksum.stdout.find(promtail_sha256) == -1) or (promtail_force is defined)

- name: download and checksum promtail {{ host_golang_arch }} binary
  tags:
    - promtail
  when: promtail_install
  get_url:
    url: "https://mdlayher.nyc3.digitaloceanspaces.com/bin/promtail_{{ host_golang_arch }}"
    dest: "/tmp/promtail"
    checksum: "sha256:{{ promtail_sha256 }}"

- name: create promtail user
  tags:
    - promtail
  when: promtail_install
  user:
    name: promtail
    shell: "/bin/false"
    comment: "promtail service user"
    groups:
      - "adm"

- name: check if promtail service exists
  tags:
    - promtail
  stat:
    path: "/etc/systemd/system/promtail.service"
  register: svccheck

- name: stop promtail service if it exists
  tags:
    - promtail
  when: svccheck.stat.exists
  service:
    name: promtail
    state: stopped

- name: copy promtail binary to {{ host_bin_path }}
  tags:
    - promtail
  when: promtail_install
  command: "cp /tmp/promtail {{ host_bin_path }}/"

- name: set permissions on promtail binary
  tags:
    - promtail
  when: promtail_install
  file:
    path: "{{ host_bin_path }}/promtail"
    owner: promtail
    group: promtail
    mode: 0755

- name: create promtail directories
  tags:
    - promtail
  when: promtail_install
  file:
    path: "{{ item }}"
    state: directory
    owner: promtail
    group: promtail
    mode: 0755
  with_items:
    - "{{ promtail_config }}"
    - "{{ promtail_data }}"

- name: create promtail configuration
  tags:
    - promtail
  template:
    src: promtail.yml.j2
    dest: "{{ promtail_config }}/promtail.yml"

- name: create promtail systemd unit
  tags:
    - promtail
  template:
    src: promtail.service.j2
    dest: "/etc/systemd/system/promtail.service"

- name: reload systemd configurations
  tags:
    - promtail
  command: "systemctl daemon-reload"

- name: start promtail service
  tags:
    - promtail
  service:
    name: promtail
    state: started
    enabled: true

- name: remove temporary promtail files
  tags:
    - promtail
  when: promtail_install
  file:
    path: "/tmp/promtail"
    state: absent

- name: create checksum file for promtail at current git revision
  tags:
    - promtail
  when: promtail_install
  template:
    src: sha256.j2
    dest: "{{ promtail_config }}/.sha256"
